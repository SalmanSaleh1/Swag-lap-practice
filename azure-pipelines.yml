trigger:
  - main

pool:
  name: MyPool

steps:
  - script: |
      echo "Installing Python 3.9"
      choco install python --version 3.9 -y
    displayName: 'Install Python'

  - script: |
      python -m venv venv
      .\venv\Scripts\activate
      pip install --upgrade pip
      pip install pytest robotframework robotframework-appiumlibrary
    displayName: 'Install Dependencies'

  - script: |
      mkdir results
    workingDirectory: $(Build.SourcesDirectory)
    displayName: 'Create Results Directory'

  # Run PyTest with Randomization and TRACE loglevel
  - script: |
      echo "Running PyTest Tests with randomize and TRACE loglevel"
      .\venv\Scripts\activate
      pytest tests/ --random --log-level=TRACE --junitxml=$(Build.SourcesDirectory)/results/pytest_results.xml --outputdir=$(Build.SourcesDirectory)/results
    displayName: 'Run PyTest Tests with Trace Logging and Randomization'

  # Run Robot Framework Tests with Randomization and TRACE loglevel
  - script: |
      echo "Running Robot Framework Tests with randomize and TRACE loglevel"
      .\venv\Scripts\activate
      robot --randomize all --loglevel TRACE --outputdir $(Build.SourcesDirectory)/results Tests/
    displayName: 'Run Robot Framework Tests with Randomization and TRACE Logging'

  # Verify if result files are generated
  - script: |
      echo "Verifying the test result files..."
      if exist "$(Build.SourcesDirectory)/results/output.xml" (
        echo "Found Robot Framework result file"
      ) else (
        echo "Robot Framework result file not found"
      )
      if exist "$(Build.SourcesDirectory)/results/pytest_results.xml" (
        echo "Found PyTest result file"
      ) else (
        echo "PyTest result file not found"
      )
    displayName: 'Verify Test Result Files'

  # Publish Robot Framework Results
  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '$(Build.SourcesDirectory)/results/output.xml'
      testRunTitle: 'Robot Framework Results'
      mergeTestResults: true
    condition: succeededOrFailed()
    displayName: 'Publish Robot Framework Results'

  # Publish PyTest Results
  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '$(Build.SourcesDirectory)/results/pytest_results.xml'
      testRunTitle: 'PyTest Results'
      mergeTestResults: true
    condition: succeededOrFailed()
    displayName: 'Publish PyTest Results'

  # Publish Results Artifacts to Azure Feed
  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: '$(Build.SourcesDirectory)/results'
      artifactName: 'TestReports'
      publishLocation: 'AzureArtifacts'
    condition: succeededOrFailed()
    displayName: 'Publish Robot Framework Reports to Azure Artifacts'
